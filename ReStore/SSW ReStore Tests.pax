| package |
package := Package name: 'SSW ReStore Tests'.
package paxVersion: 1;
	basicComment: 'ReStore
©2019 John Aspinall
https://github.com/rko281/ReStore'.


package classNames
	add: #DetailedPerson;
	add: #DetailedPerson1;
	add: #DetailedPerson2;
	add: #GenericOwnedTest;
	add: #GenericTest;
	add: #InlinedAddress;
	add: #InlinedPostcode;
	add: #InlinedTestPerson;
	add: #MidPerson;
	add: #NumberWithCurrency;
	add: #OwnedTest;
	add: #OwnerTest;
	add: #ReStoreTestWithID;
	add: #ReStoreTestWithIDOnly;
	add: #ReStoreTestWithIDSubclass;
	add: #ReStoreTestWithStringID;
	add: #SimpleAddress;
	add: #SimplePerson;
	add: #SimplePerson2;
	add: #SimpleProduct;
	add: #SimpleProductOrder;
	add: #SSWReStore2Test;
	add: #SSWReStoreAbstractQueryTest;
	add: #SSWReStoreAggregateQueryTest;
	add: #SSWReStoreAlternativeIDTest;
	add: #SSWReStoreBaseCollectionTest;
	add: #SSWReStoreBaseDictionaryTest;
	add: #SSWReStoreBlockAndOrQueryTest;
	add: #SSWReStoreBlockCacheDictionaryTest;
	add: #SSWReStoreBlockIfNilQueryTest;
	add: #SSWReStoreCacheDictionaryTest;
	add: #SSWReStoreCollectionSubQueryTest;
	add: #SSWReStoreCollectQueryTest;
	add: #SSWReStoreCommitTests;
	add: #SSWReStoreDataIDHierarchyTest;
	add: #SSWReStoreDataIDTest;
	add: #SSWReStoreDefaultReadTest;
	add: #SSWReStoreDefaultTest;
	add: #SSWReStoreDefaultWriteTest;
	add: #SSWReStoreDeleteCollectionTest;
	add: #SSWReStoreDeleteDependentCollectionTest;
	add: #SSWReStoreDeleteDependentDictionaryTest;
	add: #SSWReStoreDeleteDependentGeneralCollectionTest;
	add: #SSWReStoreDeleteDependentKeyDependentValueDictionaryTest;
	add: #SSWReStoreDeleteDependentKeyRelatedValueDictionaryTest;
	add: #SSWReStoreDeleteDependentOwnedCollectionTest;
	add: #SSWReStoreDeleteRelatedCollectionTest;
	add: #SSWReStoreDeleteRelatedDictionaryTest;
	add: #SSWReStoreDeleteRelatedGeneralCollectionTest;
	add: #SSWReStoreDeleteRelatedKeyDependentValueDictionaryTest;
	add: #SSWReStoreDeleteRelatedKeyRelatedValueDictionaryTest;
	add: #SSWReStoreDeleteRelatedOwnedCollectionTest;
	add: #SSWReStoreDependentCacheDictionaryTest;
	add: #SSWReStoreDependentDictionaryTest;
	add: #SSWReStoreDependentKeyDictionaryTest;
	add: #SSWReStoreDependentObjectTest;
	add: #SSWReStoreDependentOrderedCollectionTest;
	add: #SSWReStoreDependentOwnedCacheDictionaryTest;
	add: #SSWReStoreDependentOwnedOrderedCollectionTest;
	add: #SSWReStoreDependentOwnedSortedCollectionTest;
	add: #SSWReStoreDependentSortedCollectionTest;
	add: #SSWReStoreDirectlyPersistedTest;
	add: #SSWReStoreFullTableTest;
	add: #SSWReStoreFunctionTest;
	add: #SSWReStoreGeneralAffiliationTest;
	add: #SSWReStoreGeneralCollectionReadWithComponentsTest;
	add: #SSWReStoreGeneralCollectionSubQueryTest;
	add: #SSWReStoreGeneralDictionaryReadWithComponentsTest;
	add: #SSWReStoreGeneralTest;
	add: #SSWReStoreGenericCollectionTest;
	add: #SSWReStoreGenericNonRelatedCollectionTest;
	add: #SSWReStoreGenericObjectTest;
	add: #SSWReStoreGenericRelatedCollectionTest;
	add: #SSWReStoreGenericTest;
	add: #SSWReStoreHierarchyTest;
	add: #SSWReStoreIDTest;
	add: #SSWReStoreImplicitTrueQueryTest;
	add: #SSWReStoreInlinedTest;
	add: #SSWReStoreIsNilQueryTest;
	add: #SSWReStoreJoinQueryTest;
	add: #SSWReStoreMultiValueBlockCacheDictionaryTest;
	add: #SSWReStoreMultiValueCacheDictionaryTest;
	add: #SSWReStoreNonRelatedCacheDictionaryTest;
	add: #SSWReStoreNonRelatedDependentObjectTest;
	add: #SSWReStoreNonRelatedDependentOrderedCollectionTest;
	add: #SSWReStoreNonRelatedDependentOwnedOrderedCollectionTest;
	add: #SSWReStoreNonRelatedDependentSortedCollectionTest;
	add: #SSWReStoreNonRelatedDictionaryTest;
	add: #SSWReStoreNonRelatedObjectTest;
	add: #SSWReStoreNonRelatedOrderedCollectionTest;
	add: #SSWReStoreNonRelatedOwnedCacheDictionaryTest;
	add: #SSWReStoreNonRelatedOwnedOrderedCollectionTest;
	add: #SSWReStoreNonRelatedSortedCollectionTest;
	add: #SSWReStoreNotNilQueryTest;
	add: #SSWReStoreObjectAPITests;
	add: #SSWReStoreOwnedBlockCacheDictionaryTest;
	add: #SSWReStoreOwnedCacheDictionaryTest;
	add: #SSWReStoreOwnedCollectionReadWithComponentsTest;
	add: #SSWReStoreOwnedCollectionSubQueryTest;
	add: #SSWReStoreOwnedMultiValueBlockCacheDictionaryTest;
	add: #SSWReStoreOwnedMultiValueCacheDictionaryTest;
	add: #SSWReStorePersonTest;
	add: #SSWReStoreProcessAffiliationTest;
	add: #SSWReStoreProcessSafetyTest;
	add: #SSWReStoreProductOrdersTest;
	add: #SSWReStoreQueryByExampleTest;
	add: #SSWReStoreQueryTest;
	add: #SSWReStoreReadStreamTest;
	add: #SSWReStoreReadWithComponentsTest;
	add: #SSWReStoreRefreshNoVersTest;
	add: #SSWReStoreRefreshTest;
	add: #SSWReStoreRelatedCacheDictionaryTest;
	add: #SSWReStoreRelatedDictionaryTest;
	add: #SSWReStoreRelatedKeyDictionaryTest;
	add: #SSWReStoreRelatedObjectTest;
	add: #SSWReStoreRelatedOrderedCollectionTest;
	add: #SSWReStoreRelatedOwnedCacheDictionaryTest;
	add: #SSWReStoreRelatedOwnedOrderedCollectionTest;
	add: #SSWReStoreRelatedOwnedSortedCollectionTest;
	add: #SSWReStoreRelatedSortedCollectionTest;
	add: #SSWReStoreRemoteTest;
	add: #SSWReStoreSortTest;
	add: #SSWReStoreSpeedTest;
	add: #SSWReStoreSQLInjectionTest;
	add: #SSWReStoreStringDataIDTest;
	add: #SSWReStoreStringDictionaryTest;
	add: #SSWReStoreStringIDTest;
	add: #SSWReStoreTableTest;
	add: #SSWReStoreTableWithNamespaceTest;
	add: #SSWReStoreTest;
	add: #SSWReStoreTransactionlessUpdateClashTest;
	add: #SSWReStoreTypeTest;
	add: #SSWReStoreUnstoreTests;
	add: #SSWReStoreUpdateClashTest;
	add: #SSWReStoreUpdateClashTestPersistent;
	add: #SSWReStoreUUIDSubTest;
	add: #SSWReStoreUUIDTest;
	add: #StringIDOwnedTest;
	add: #SubPerson;
	add: #SuperPerson;
	add: #Test;
	add: #TestBitmask;
	add: #TestWithBitmask;
	add: #TypeTest;
	add: #UUIDOwnedSubTest;
	add: #UUIDOwnedTest;
	yourself.

package methodNames
	add: #SSWMySQLDialect -> #shouldDropTablesForTestCases;
	add: #SSWPostgreSQLDialect -> #shouldDropTablesForTestCases;
	add: #SSWReStore -> #simulateReconnect;
	add: #SSWSQLDialect -> #shouldDropTablesForTestCases;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Core\Object Arts\Dolphin\Base\Dolphin'
	'..\Core\Object Arts\Dolphin\Base\Dolphin Legacy Date & Time'
	'SSW ReStore for Dolphin'
	'SSW ReStore Main'
	'SSW ReStore MVP'
	'SSW ReStore Querying'
	'SSW ReStore SQL Entities'
	'SSW ReStore Tables'
	'..\Core\Contributions\Camp Smalltalk\SUnit\SUnit').

package setManualPrerequisites: #(
	'SSW ReStore MVP').

package!

"Class Definitions"!

Object subclass: #GenericTest
	instanceVariableNames: 'name component'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'componentDefinition reStoreIDClass'!
Object subclass: #InlinedAddress
	instanceVariableNames: 'line1 postcode'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #InlinedPostcode
	instanceVariableNames: 'code1 code2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #InlinedTestPerson
	instanceVariableNames: 'firstName surname address1 address2 address3 line1 code1 bankBalance'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #NumberWithCurrency
	instanceVariableNames: 'number currency'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #OwnerTest
	instanceVariableNames: 'name number single1 single2 single3 owned ownedSet ownedArray ownedOrdered ownedSorted ownedList setOfDates arrayOfNames orderedBools sortedNumbers descNumbers listOfTimes dictOfSizes set array ordered sorted list aspectDictionary keyedBaseDictionary keyedGeneralDictionary refreshCount dependentOwnedOrdered dependentOrdered'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #ReStoreTestWithID
	instanceVariableNames: 'name nmbr other'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #ReStoreTestWithIDOnly
	instanceVariableNames: 'nmbr'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #SimpleAddress
	instanceVariableNames: 'line1 postcode'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #SimplePerson
	instanceVariableNames: 'firstName surname emailAddress time friend age test orders address isDeceased'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #SimplePerson2
	instanceVariableNames: 'firstName forename surname emailAddress time friend bestFriend notes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'useForename useBestFriend useLongNotes useNotes'!
Object subclass: #SimpleProduct
	instanceVariableNames: 'description supplierPrice retailPrice'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #SimpleProductOrder
	instanceVariableNames: 'customer product quantity date'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #SuperPerson
	instanceVariableNames: 'surname firstName'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #Test
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #TypeTest
	instanceVariableNames: 'char varchar medText largeText unsizedText tinyBlob medBlob largeBlob unsizedBlob integer largeInteger float decimal date time datetime timeWithMilliseconds datetimeWithMilliseconds trueBoolean falseBoolean uuid'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ReStoreTestWithID subclass: #ReStoreTestWithStringID
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'counter'!
ReStoreTestWithIDOnly subclass: #ReStoreTestWithIDSubclass
	instanceVariableNames: 'name other'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWDBDirectlyPersistedObject subclass: #TestBitmask
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SuperPerson subclass: #DetailedPerson
	instanceVariableNames: 'dob dateOfBirth friend bestFriend'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SuperPerson subclass: #DetailedPerson1
	instanceVariableNames: 'friend2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SuperPerson subclass: #DetailedPerson2
	instanceVariableNames: 'dob dateOfBirth friend bestFriend notes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'useDateOfBirth useBestFriend useLongNotes'!
SuperPerson subclass: #MidPerson
	instanceVariableNames: 'middleName midFriend'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
MidPerson subclass: #SubPerson
	instanceVariableNames: 'age'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Test subclass: #GenericOwnedTest
	instanceVariableNames: 'owner key deepTest'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Test subclass: #OwnedTest
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Test subclass: #TestWithBitmask
	instanceVariableNames: 'bitmask orderedCollection sortedCollection array set dictionary'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
GenericOwnedTest subclass: #UUIDOwnedTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
UUIDOwnedTest subclass: #StringIDOwnedTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
UUIDOwnedTest subclass: #UUIDOwnedSubTest
	instanceVariableNames: 'number'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase subclass: #SSWReStoreTest
	instanceVariableNames: 'reStore'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'queryCount'!
SSWReStoreTest subclass: #SSWReStore2Test
	instanceVariableNames: 'reStore2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTest subclass: #SSWReStoreGeneralTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTest subclass: #SSWReStoreHierarchyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTest subclass: #SSWReStoreIDTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTest subclass: #SSWReStoreImplicitTrueQueryTest
	instanceVariableNames: 'instances'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTest subclass: #SSWReStorePersonTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTest subclass: #SSWReStoreRemoteTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTest subclass: #SSWReStoreTypeTest
	instanceVariableNames: 'date time datetime typeTest'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStore2Test subclass: #SSWReStoreDirectlyPersistedTest
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStore2Test subclass: #SSWReStoreGenericTest
	instanceVariableNames: 'testObject testObject2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStore2Test subclass: #SSWReStoreObjectAPITests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStore2Test subclass: #SSWReStoreRefreshTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStore2Test subclass: #SSWReStoreUpdateClashTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStore2Test subclass: #SSWReStoreUpdateClashTestPersistent
	instanceVariableNames: 'singleA1 singleB1 singleC1 singleA2 singleB2 singleC2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericTest subclass: #SSWReStoreBaseCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericTest subclass: #SSWReStoreCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericTest subclass: #SSWReStoreGenericCollectionTest
	instanceVariableNames: 'collection'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericTest subclass: #SSWReStoreGenericObjectTest
	instanceVariableNames: 'component'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericTest subclass: #SSWReStoreMultiValueCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericTest subclass: #SSWReStoreStringDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreBaseCollectionTest subclass: #SSWReStoreBaseDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreCacheDictionaryTest subclass: #SSWReStoreBlockCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreCacheDictionaryTest subclass: #SSWReStoreOwnedCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreOwnedCacheDictionaryTest subclass: #SSWReStoreOwnedBlockCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericCollectionTest subclass: #SSWReStoreGenericNonRelatedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericCollectionTest subclass: #SSWReStoreGenericRelatedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericNonRelatedCollectionTest subclass: #SSWReStoreNonRelatedDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericNonRelatedCollectionTest subclass: #SSWReStoreNonRelatedOrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericNonRelatedCollectionTest subclass: #SSWReStoreNonRelatedOwnedOrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericNonRelatedCollectionTest subclass: #SSWReStoreNonRelatedSortedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreNonRelatedDictionaryTest subclass: #SSWReStoreNonRelatedCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreNonRelatedCacheDictionaryTest subclass: #SSWReStoreNonRelatedOwnedCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreNonRelatedOrderedCollectionTest subclass: #SSWReStoreNonRelatedDependentOrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreNonRelatedOwnedOrderedCollectionTest subclass: #SSWReStoreNonRelatedDependentOwnedOrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreNonRelatedSortedCollectionTest subclass: #SSWReStoreNonRelatedDependentSortedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericRelatedCollectionTest subclass: #SSWReStoreRelatedDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericRelatedCollectionTest subclass: #SSWReStoreRelatedOrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericRelatedCollectionTest subclass: #SSWReStoreRelatedOwnedOrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericRelatedCollectionTest subclass: #SSWReStoreRelatedSortedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedDictionaryTest subclass: #SSWReStoreDependentDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedDictionaryTest subclass: #SSWReStoreRelatedCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedDictionaryTest subclass: #SSWReStoreRelatedKeyDictionaryTest
	instanceVariableNames: 'inverseDictionary'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedCacheDictionaryTest subclass: #SSWReStoreDependentCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedCacheDictionaryTest subclass: #SSWReStoreRelatedOwnedCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedOwnedCacheDictionaryTest subclass: #SSWReStoreDependentOwnedCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedKeyDictionaryTest subclass: #SSWReStoreDependentKeyDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedOrderedCollectionTest subclass: #SSWReStoreDependentOrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedOwnedOrderedCollectionTest subclass: #SSWReStoreDependentOwnedOrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedOwnedOrderedCollectionTest subclass: #SSWReStoreRelatedOwnedSortedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedOwnedSortedCollectionTest subclass: #SSWReStoreDependentOwnedSortedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedSortedCollectionTest subclass: #SSWReStoreDependentSortedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericObjectTest subclass: #SSWReStoreNonRelatedObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreGenericObjectTest subclass: #SSWReStoreRelatedObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreNonRelatedObjectTest subclass: #SSWReStoreNonRelatedDependentObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRelatedObjectTest subclass: #SSWReStoreDependentObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreMultiValueCacheDictionaryTest subclass: #SSWReStoreMultiValueBlockCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreMultiValueCacheDictionaryTest subclass: #SSWReStoreOwnedMultiValueCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreOwnedMultiValueCacheDictionaryTest subclass: #SSWReStoreOwnedMultiValueBlockCacheDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreObjectAPITests subclass: #SSWReStoreUnstoreTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreRefreshTest subclass: #SSWReStoreRefreshNoVersTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreUpdateClashTest subclass: #SSWReStoreTransactionlessUpdateClashTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreIDTest subclass: #SSWReStoreAlternativeIDTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreIDTest subclass: #SSWReStoreDataIDTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreAlternativeIDTest subclass: #SSWReStoreStringIDTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreAlternativeIDTest subclass: #SSWReStoreUUIDTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreUUIDTest subclass: #SSWReStoreUUIDSubTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDataIDTest subclass: #SSWReStoreDataIDHierarchyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDataIDTest subclass: #SSWReStoreStringDataIDTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStorePersonTest subclass: #SSWReStoreAbstractQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStorePersonTest subclass: #SSWReStoreCommitTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStorePersonTest subclass: #SSWReStoreInlinedTest
	instanceVariableNames: 'persons'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStorePersonTest subclass: #SSWReStoreReadStreamTest
	instanceVariableNames: 'readStream'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStorePersonTest subclass: #SSWReStoreSpeedTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStorePersonTest subclass: #SSWReStoreTableTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreAbstractQueryTest subclass: #SSWReStoreDefaultTest
	instanceVariableNames: 'reStore2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreAbstractQueryTest subclass: #SSWReStoreProcessSafetyTest
	instanceVariableNames: 'semaphore'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreAbstractQueryTest subclass: #SSWReStoreQueryByExampleTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreAbstractQueryTest subclass: #SSWReStoreQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreAbstractQueryTest subclass: #SSWReStoreSortTest
	instanceVariableNames: 'simplePersonCompareMethod'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreAbstractQueryTest subclass: #SSWReStoreSQLInjectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDefaultTest subclass: #SSWReStoreDefaultReadTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDefaultTest subclass: #SSWReStoreDefaultWriteTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDefaultTest subclass: #SSWReStoreGeneralAffiliationTest
	instanceVariableNames: 'reStore3 sessionHolder'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDefaultTest subclass: #SSWReStoreProcessAffiliationTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreQueryTest subclass: #SSWReStoreBlockAndOrQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreQueryTest subclass: #SSWReStoreBlockIfNilQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreQueryTest subclass: #SSWReStoreCollectQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreQueryTest subclass: #SSWReStoreFunctionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreQueryTest subclass: #SSWReStoreIsNilQueryTest
	instanceVariableNames: 'instances'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreQueryTest subclass: #SSWReStoreJoinQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreQueryTest subclass: #SSWReStoreNotNilQueryTest
	instanceVariableNames: 'instances'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreQueryTest subclass: #SSWReStoreProductOrdersTest
	instanceVariableNames: 'widget gadget wobulator customer1 customer2 customer3 customer4'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreProductOrdersTest subclass: #SSWReStoreAggregateQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreProductOrdersTest subclass: #SSWReStoreCollectionSubQueryTest
	instanceVariableNames: 'customers goldPlatedWobulator'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreProductOrdersTest subclass: #SSWReStoreReadWithComponentsTest
	instanceVariableNames: 'customers'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreCollectionSubQueryTest subclass: #SSWReStoreGeneralCollectionSubQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreCollectionSubQueryTest subclass: #SSWReStoreOwnedCollectionSubQueryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreReadWithComponentsTest subclass: #SSWReStoreDeleteCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreReadWithComponentsTest subclass: #SSWReStoreGeneralCollectionReadWithComponentsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreReadWithComponentsTest subclass: #SSWReStoreGeneralDictionaryReadWithComponentsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreReadWithComponentsTest subclass: #SSWReStoreOwnedCollectionReadWithComponentsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteCollectionTest subclass: #SSWReStoreDeleteDependentCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteCollectionTest subclass: #SSWReStoreDeleteRelatedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteDependentCollectionTest subclass: #SSWReStoreDeleteDependentGeneralCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteDependentCollectionTest subclass: #SSWReStoreDeleteDependentOwnedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteDependentGeneralCollectionTest subclass: #SSWReStoreDeleteDependentDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteDependentDictionaryTest subclass: #SSWReStoreDeleteDependentKeyDependentValueDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteDependentDictionaryTest subclass: #SSWReStoreDeleteRelatedKeyDependentValueDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteRelatedCollectionTest subclass: #SSWReStoreDeleteRelatedGeneralCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteRelatedCollectionTest subclass: #SSWReStoreDeleteRelatedOwnedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteRelatedGeneralCollectionTest subclass: #SSWReStoreDeleteRelatedDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteRelatedDictionaryTest subclass: #SSWReStoreDeleteDependentKeyRelatedValueDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreDeleteRelatedDictionaryTest subclass: #SSWReStoreDeleteRelatedKeyRelatedValueDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTableTest subclass: #SSWReStoreFullTableTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWReStoreTableTest subclass: #SSWReStoreTableWithNamespaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!SSWMySQLDialect methodsFor!

shouldDropTablesForTestCases

	^false! !
!SSWMySQLDialect categoriesForMethods!
shouldDropTablesForTestCases!public!testing! !
!

!SSWPostgreSQLDialect methodsFor!

shouldDropTablesForTestCases

	^true! !
!SSWPostgreSQLDialect categoriesForMethods!
shouldDropTablesForTestCases!public!testing! !
!

!SSWReStore methodsFor!

simulateReconnect

	"Simultate a disconnect; reconnect sequence of the receiver, however do not cycle the connection.
	This is to allow data to be preserved by transirent in-memory test databases (e.g. SQLite :memory: mode)"
	
	"Disconnect"
	self
		clearProxyCache;
		clearNextIDCache;
		clearTransaction;
		clearDBTableNames;
		clearStatementCache.
	self class deactivated: self.

	"Reconnect"
	self objectProxyClass isNil ifTrue: [self setDefaultTransactionMode].
	self transactionMutex: Mutex new.
	self class activated: self.
	self persistentSystemClasses do: [ :each | self addClass: each]! !
!SSWReStore categoriesForMethods!
simulateReconnect!connection!public! !
!

!SSWSQLDialect methodsFor!

shouldDropTablesForTestCases

	"For efficiency during SUnit test runs, for some databases we don't drop tables (this can take a long time) but erase all data instead.
	Return true to drop tables prior to a test, false to erase data instead"

	^true! !
!SSWSQLDialect categoriesForMethods!
shouldDropTablesForTestCases!public!testing! !
!

"End of package definition"!

